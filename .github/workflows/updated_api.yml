name: Comment PR with API URL

on:
  push:
    branches:
      - experiment/___-test-google-clooud

jobs:
  comment-pr:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Authenticate with Google Cloud
        run: |
          echo "$GOOGLE_CREDENTIALS" > /tmp/gcp-credentials.json
          gcloud auth activate-service-account --key-file=/tmp/gcp-credentials.json
          gcloud config set project strong-ward-453503-f1
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}

      - name: Get Cloud Run Service URL
        id: get-url
        run: |
          BRANCH="${{ github.ref_name }}"
          if [[ "$BRANCH" == "development" ]]; then
            SERVICE="poke-market"
          elif [[ "$BRANCH" == "main" ]]; then
            SERVICE="poke-market-prod"
          else
            echo "Branch '$BRANCH' is not 'development' or 'main'. Skipping URL fetch."
            exit 0  # Exit gracefully if not a target branch
          fi
          URL=$(gcloud run services describe "$SERVICE" --region us-central1 --format 'value(status.url)')
          echo "service_url=$URL" >> $GITHUB_OUTPUT
          rm /tmp/gcp-credentials.json  # Clean up
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}

      - name: Comment on PR
        if: steps.get-url.outputs.service_url != ''
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const branch = "${{ github.ref_name }}";
            const serviceUrl = "${{ steps.get-url.outputs.service_url }}";
            const repo = context.repo.repo;
            const owner = context.repo.owner;

            const { data: pulls } = await github.rest.pulls.list({
              owner: owner,
              repo: repo,
              head: `${owner}:${branch}`,
              state: "open"
            });

            if (pulls.length > 0) {
              const prNumber = pulls[0].number;
              await github.rest.issues.createComment({
                owner: owner,
                repo: repo,
                issue_number: prNumber,
                body: `API updated! Access it here: ${serviceUrl}`
              });
            } else {
              console.log("No open PR found for this branch.");
            }
